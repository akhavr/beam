set(UTILITY_SRC
    logger.cpp
    logger_checkpoints.cpp
    helpers.cpp
    config.cpp
	options.cpp
	string_helpers.cpp
# ~etc
)

set(IO_SRC
    io/buffer.cpp
    io/bufferchain.cpp
    io/reactor.cpp
    io/asyncevent.cpp
    io/timer.cpp
    io/address.cpp
    io/tcpserver.cpp
    io/tcpstream.cpp
    io/errorhandling.cpp
    io/coarsetimer.cpp
    asynccontext.cpp
# ~etc
)

if (MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX")
elseif(ANDROID)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx")
endif()

add_library(utility STATIC ${UTILITY_SRC} ${IO_SRC})
add_library(crypto STATIC crypto/blake/ref/blake2b-ref.c)
include_directories(${PROJECT_SOURCE_DIR}/utility)

if (UV_INTERNAL)
    include(io/libuv.cmake)
    add_dependencies(utility uvinternal)
    target_link_libraries(utility uvinternal)
else()
    target_link_libraries(utility uv)
endif()

if(ANDROID)
    include_directories($ENV{BOOST_ROOT_ANDROID}/include)

    target_link_libraries(utility 
        $ENV{BOOST_ROOT_ANDROID}/lib/libboost_program_options-clang-darwin-mt-a32-1_68.a 
        $ENV{BOOST_ROOT_ANDROID}/lib/libboost_filesystem-clang-darwin-mt-a32-1_68.a
        $ENV{BOOST_ROOT_ANDROID}/lib/libboost_system-clang-darwin-mt-a32-1_68.a)
else()
    if (Boost_FOUND)
        find_package(Boost COMPONENTS program_options filesystem)
        target_link_libraries(utility Boost::program_options Boost::filesystem)
    else()
        target_link_libraries(utility boost_program_options boost_filesystem boost_system)
    endif()
endif()

if(NOT ANDROID)
    add_subdirectory(unittest)
endif()
